#!/bin/sh

## live-build(7) - System Build Scripts
## Copyright (C) 2016-2020 The Debian Live team
## Copyright (C) 2006-2015 Daniel Baumann <mail@daniel-baumann.ch>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Including common functions
[ -e "${LIVE_BUILD}/scripts/build.sh" ] && . "${LIVE_BUILD}/scripts/build.sh" || . /usr/lib/live/build.sh

# Redirecting to auto script if required
if [ "${1}" = "noauto" ]; then
	shift
else
	Maybe_auto_redirect clean "${@}"
fi

# Setting static variables
DESCRIPTION="Clean up system build directories"
HELP=""
USAGE="${PROGRAM} [--all] [--cache] [--chroot] [--binary] [--purge] [--remove] [--stage] [--source]"

# Reading, preparing and validating config
Read_conffiles $(Common_conffiles)
Prepare_config
#Validate_config

# Avoiding cases were users accidentally nuke their config/binary
if [ ! -d config ] && [ "$(basename ${PWD})" = "config" ]
then
	Echo_error "%s is not a good live-build working directory to clean." "${PWD}"
	exit 1
fi

Remove_lockfile

if [ $# -eq 0 ]; then
	set -- "--all"
fi

STAGEFILES_DIR="$(Stagefiles_dir)"

for ARGUMENT in "${@}"; do
	case "${ARGUMENT}" in
		--all)
			Echo_debug "Running --all"
			"${0}" noauto --chroot
			"${0}" noauto --binary
			"${0}" noauto --stage
			"${0}" noauto --source

			rmdir --ignore-fail-on-non-empty auto > /dev/null 2>&1 || true
			rmdir --ignore-fail-on-non-empty local/bin > /dev/null 2>&1 || true
			rmdir --ignore-fail-on-non-empty local > /dev/null 2>&1 || true
			;;

		--cache)
			Echo_debug "Cleaning cache"
			rm -rf cache
			;;

		--chroot)
			# This one is not debug because it can potentially take some time
			Echo_message "Cleaning chroot"
			umount -f chroot/run > /dev/null 2>&1 || true
			umount -f chroot/sys > /dev/null 2>&1 || true
			umount -f chroot/proc/sys/fs/binfmt_misc > /dev/null 2>&1 || true
			umount -f chroot/proc > /dev/null 2>&1 || true
			umount -f chroot/lib/init/rw > /dev/null 2>&1 || true
			umount -f chroot/dev/shm > /dev/null 2>&1 || true
			umount -f chroot/dev/pts > /dev/null 2>&1 || true
			umount -f chroot/dev > /dev/null 2>&1 || true
			umount -f chroot/var/lib/dpkg > /dev/null 2>&1 || true
			umount -f chroot/root/config > /dev/null 2>&1 || true

			umount -f chroot/binary.tmp > /dev/null 2>&1 || true
			umount -f chroot/dev.tmp/pts > /dev/null 2>&1 || true

			rm -rf chroot chroot.tmp

			rm -f chroot.packages.live chroot.packages.install
			rm -f chroot.files

			rm -f "${STAGEFILES_DIR}"/chroot*
			;;

		--binary)
			Echo_debug "Cleaning binary"
			umount -f binary.tmp > /dev/null 2>&1 || true
			rm -rf binary.tmp binary.deb binary.udeb
			rm -f ${LB_IMAGE_NAME}*.iso
			rm -f ${LB_IMAGE_NAME}*.img
			rm -f ${LB_IMAGE_NAME}*.tar.gz
			rm -f ${LB_IMAGE_NAME}*.zsync*
			rm -f ${LB_IMAGE_NAME}.sh
			rm -f ${LB_IMAGE_NAME}*.contents ${LB_IMAGE_NAME}*.packages ${LB_IMAGE_NAME}*.files
			rm -f ${LB_IMAGE_NAME}*.iso-ONIE.bin
			rm -f MD5SUMS SHA1SUMS SHA256SUMS SHA512SUMS
			rm -f md5sum.txt sha1sum.txt sha256sum.txt sha512sum.txt

			rm -rf binary
			rm -rf tftpboot

			rm -f "${STAGEFILES_DIR}"/binary*
			;;

		--remove)
			Echo_debug "Running --remove"
			"${0}" noauto --all
			rm -rf cache/packages.*
			;;

		--purge)
			Echo_debug "Running --purge"
			"${0}" noauto --all
			"${0}" noauto --cache

			if [ -e auto/config ]
			then
				Remove_stagefile config
			fi
			;;

		--stage)
			Echo_debug "Cleaning stage files"
			rm -rf "${STAGEFILES_DIR}"/*
			;;

		--source)
			Echo_debug "Cleaning source"
			rm -f ${LB_IMAGE_NAME}-source*.iso
			rm -f ${LB_IMAGE_NAME}-source*.img
			rm -f ${LB_IMAGE_NAME}-source*.tar
			rm -f ${LB_IMAGE_NAME}-source*.tar.gz
			rm -f ${LB_IMAGE_NAME}-source*.list
			rm -f ${LB_IMAGE_NAME}-source-selection.txt

			rm -rf source

			rm -f "${STAGEFILES_DIR}"/source*
			;;

		-h|--help)
			Man
			;;

		-u|--usage)
			Usage --exit
			;;

		-v|--version)
			echo "${VERSION}"
			exit 0
			;;

		*)
			Echo_error "invalid arguments"
			Usage --fail
			;;
	esac
done
